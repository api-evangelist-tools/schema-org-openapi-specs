{
	"swagger": "2.0",
	"info": {
		"title": "Ownership Info API",
		"description": "A structured value providing information about when a certain organization or person owned a certain product.",
		"termsOfService": "http://apievangelist.com/terms-of-service.html",
		"version": "v1"
	},
	"host": "ownership.info.example.com",
	"basePath": "/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"paths": {
		"/ownership-info/": {
			"get": {
				"summary": "Get Ownership Info",
				"description": "Returns Ownership Info",
				"operationId": "getOwnershipInfo",
				"parameters": [{
					"name": "q",
					"in": "query",
					"description": "Keyword search for item",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OwnershipInfo"
							}
						}
					}
				},
				"tags": ["Ownership Info"]
			},
			"post": {
				"summary": "Add Ownership Info",
				"description": "Add Ownership Info",
				"operationId": "addOwnershipInfo",
				"parameters": [{
					"name": "acquiredfrom",
					"in": "formData",
					"description": "The organization or person from which the product was acquired.",
					"required": false,
					"type": "person or  organization"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "imageobject or  url"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "ownedfrom",
					"in": "formData",
					"description": "The date and time of obtaining the product.",
					"required": false,
					"type": "datetime"
				},
				{
					"name": "ownedthrough",
					"in": "formData",
					"description": "The date and time of giving up ownership on the product.",
					"required": false,
					"type": "datetime"
				},
				{
					"name": "owns",
					"in": "formData",
					"description": "Products owned by the organization or person. ",
					"required": false,
					"type": "person or organization"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "typeofgood",
					"in": "formData",
					"description": "The product that this structured value is referring to.",
					"required": false,
					"type": "product"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OwnershipInfo"
							}
						}
					}
				},
				"tags": ["Ownership Info"]
			}
		},
		"/ownership-info/{id}/": {
			"get": {
				"summary": "Get Ownership Info",
				"description": "Returns a single Ownership Info",
				"operationId": "getOwnershipInfo",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OwnershipInfo"
							}
						}
					}
				},
				"tags": ["Ownership Info"]
			},
			"put": {
				"summary": "Update Ownership Info",
				"description": "Update a single Ownership Info",
				"operationId": "updateOwnershipInfoItem",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				},
				{
					"name": "acquiredfrom",
					"in": "formData",
					"description": "The organization or person from which the product was acquired.",
					"required": false,
					"type": "person or  organization"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "imageobject or  url"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "ownedfrom",
					"in": "formData",
					"description": "The date and time of obtaining the product.",
					"required": false,
					"type": "datetime"
				},
				{
					"name": "ownedthrough",
					"in": "formData",
					"description": "The date and time of giving up ownership on the product.",
					"required": false,
					"type": "datetime"
				},
				{
					"name": "owns",
					"in": "formData",
					"description": "Products owned by the organization or person. ",
					"required": false,
					"type": "person or organization"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "typeofgood",
					"in": "formData",
					"description": "The product that this structured value is referring to.",
					"required": false,
					"type": "product"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OwnershipInfo"
							}
						}
					}
				},
				"tags": ["Ownership Info"]
			},
			"delete": {
				"summary": "Ownership Info",
				"description": "Deletes a single Ownership Info",
				"operationId": "deleteOwnershipInfo",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OwnershipInfo"
							}
						}
					}
				},
				"tags": ["Ownership Info"]
			}
		}
	},
	"definitions": {
		"OwnershipInfo": {
			"properties": {
				"acquiredfrom": {
					"description": "The organization or person from which the product was acquired.",
					"type": "person or  organization"
				},
				"additionaltype": {
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"type": "url"
				},
				"alternatename": {
					"description": "An alias for the item.",
					"type": "text"
				},
				"description": {
					"description": "A short description of the item.",
					"type": "text"
				},
				"image": {
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"type": "imageobject or  url"
				},
				"mainentityofpage": {
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"type": "creativework or  url"
				},
				"name": {
					"description": "The name of the item.",
					"type": "text"
				},
				"ownedfrom": {
					"description": "The date and time of obtaining the product.",
					"type": "datetime"
				},
				"ownedthrough": {
					"description": "The date and time of giving up ownership on the product.",
					"type": "datetime"
				},
				"owns": {
					"description": "Products owned by the organization or person. ",
					"type": "person or organization"
				},
				"potentialaction": {
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"type": "action"
				},
				"sameas": {
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"type": "url"
				},
				"typeofgood": {
					"description": "The product that this structured value is referring to.",
					"type": "product"
				},
				"url": {
					"description": "URL of the item.",
					"type": "url"
				}
			}
		}
	}
}