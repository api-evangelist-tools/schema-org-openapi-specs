{
	"swagger": "2.0",
	"info": {
		"title": "Property API",
		"description": "A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.",
		"termsOfService": "http://apievangelist.com/terms-of-service.html",
		"version": "v1"
	},
	"host": "property.example.com",
	"basePath": "/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"paths": {
		"/property/": {
			"get": {
				"summary": "Get Property",
				"description": "Returns Property",
				"operationId": "getProperty",
				"parameters": [{
					"name": "q",
					"in": "query",
					"description": "Keyword search for item",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Property"
							}
						}
					}
				},
				"tags": ["Property"]
			},
			"post": {
				"summary": "Add Property",
				"description": "Add Property",
				"operationId": "addProperty",
				"parameters": [{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "domainincludes",
					"in": "formData",
					"description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
					"required": false,
					"type": "class"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "imageobject or  url"
				},
				{
					"name": "inverseof",
					"in": "formData",
					"description": "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the \'alumni\' and \'alumniOf\' properties are inverseOf each other. Some properties don\'t have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.",
					"required": false,
					"type": "property"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "rangeincludes",
					"in": "formData",
					"description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
					"required": false,
					"type": "class"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "supersededby",
					"in": "formData",
					"description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
					"required": false,
					"type": "enumeration or  class or  property"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Property"
							}
						}
					}
				},
				"tags": ["Property"]
			}
		},
		"/property/{id}/": {
			"get": {
				"summary": "Get Property",
				"description": "Returns a single Property",
				"operationId": "getProperty",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Property"
							}
						}
					}
				},
				"tags": ["Property"]
			},
			"put": {
				"summary": "Update Property",
				"description": "Update a single Property",
				"operationId": "updatePropertyItem",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "domainincludes",
					"in": "formData",
					"description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
					"required": false,
					"type": "class"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "imageobject or  url"
				},
				{
					"name": "inverseof",
					"in": "formData",
					"description": "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the \'alumni\' and \'alumniOf\' properties are inverseOf each other. Some properties don\'t have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.",
					"required": false,
					"type": "property"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "rangeincludes",
					"in": "formData",
					"description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
					"required": false,
					"type": "class"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "supersededby",
					"in": "formData",
					"description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
					"required": false,
					"type": "enumeration or  class or  property"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Property"
							}
						}
					}
				},
				"tags": ["Property"]
			},
			"delete": {
				"summary": "Property",
				"description": "Deletes a single Property",
				"operationId": "deleteProperty",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Property"
							}
						}
					}
				},
				"tags": ["Property"]
			}
		}
	},
	"definitions": {
		"Property": {
			"properties": {
				"additionaltype": {
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"type": "url"
				},
				"alternatename": {
					"description": "An alias for the item.",
					"type": "text"
				},
				"description": {
					"description": "A short description of the item.",
					"type": "text"
				},
				"domainincludes": {
					"description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
					"type": "class"
				},
				"image": {
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"type": "imageobject or  url"
				},
				"inverseof": {
					"description": "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the \'alumni\' and \'alumniOf\' properties are inverseOf each other. Some properties don\'t have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.",
					"type": "property"
				},
				"mainentityofpage": {
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"type": "creativework or  url"
				},
				"name": {
					"description": "The name of the item.",
					"type": "text"
				},
				"potentialaction": {
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"type": "action"
				},
				"rangeincludes": {
					"description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
					"type": "class"
				},
				"sameas": {
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"type": "url"
				},
				"supersededby": {
					"description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
					"type": "enumeration or  class or  property"
				},
				"url": {
					"description": "URL of the item.",
					"type": "url"
				}
			}
		}
	}
}