{
	"swagger": "2.0",
	"info": {
		"title": "Alignment Object API",
		"description": "An intangible item that describes an alignment between a learning resource and a node in an educational framework.",
		"termsOfService": "http:\/\/apievangelist.com\/terms-of-service.html",
		"version": "v1"
	},
	"host": "alignment.object.example.com",
	"basePath": "\/",
	"schemes": ["http"],
	"produces": ["application\/json"],
	"paths": {
		"\/alignment-object\/": {
			"get": {
				"summary": "Get Alignment Object",
				"description": "Returns Alignment Object",
				"operationId": "getAlignmentObject",
				"parameters": [{
					"name": "q",
					"in": "query",
					"description": "Keyword search for item",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/AlignmentObject"
							}
						}
					}
				},
				"tags": ["Alignment Object"]
			},
			"post": {
				"summary": "Add Alignment Object",
				"description": "Add Alignment Object",
				"operationId": "addAlignmentObject",
				"parameters": [{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alignmenttype",
					"in": "formData",
					"description": "A category of alignment between the learning resource and the framework node. Recommended values include: \\'assesses\\', \\'teaches\\', \\'requires\\', \\'textComplexity\\', \\'readingLevel\\', \\'educationalSubject\\', and \\'educationLevel\\'.",
					"required": false,
					"type": "text"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "educationalalignment",
					"in": "formData",
					"description": "An alignment to an established educational framework. ",
					"required": false,
					"type": "creativework"
				},
				{
					"name": "educationalframework",
					"in": "formData",
					"description": "The framework to which the resource being described is aligned.",
					"required": false,
					"type": "text"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "url or  imageobject"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \\'object\\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\\'s identity. E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "targetdescription",
					"in": "formData",
					"description": "The description of a node in an established educational framework.",
					"required": false,
					"type": "text"
				},
				{
					"name": "targetname",
					"in": "formData",
					"description": "The name of a node in an established educational framework.",
					"required": false,
					"type": "text"
				},
				{
					"name": "targeturl",
					"in": "formData",
					"description": "The URL of a node in an established educational framework.",
					"required": false,
					"type": "url"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/AlignmentObject"
							}
						}
					}
				},
				"tags": ["Alignment Object"]
			}
		},
		"\/alignment-object\/{id}\/": {
			"get": {
				"summary": "Get Alignment Object",
				"description": "Returns a single Alignment Object",
				"operationId": "getAlignmentObject",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/AlignmentObject"
							}
						}
					}
				},
				"tags": ["Alignment Object"]
			},
			"put": {
				"summary": "Update Alignment Object",
				"description": "Update a single Alignment Object",
				"operationId": "updateAlignmentObjectItem",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alignmenttype",
					"in": "formData",
					"description": "A category of alignment between the learning resource and the framework node. Recommended values include: \\'assesses\\', \\'teaches\\', \\'requires\\', \\'textComplexity\\', \\'readingLevel\\', \\'educationalSubject\\', and \\'educationLevel\\'.",
					"required": false,
					"type": "text"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "educationalalignment",
					"in": "formData",
					"description": "An alignment to an established educational framework. ",
					"required": false,
					"type": "creativework"
				},
				{
					"name": "educationalframework",
					"in": "formData",
					"description": "The framework to which the resource being described is aligned.",
					"required": false,
					"type": "text"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "url or  imageobject"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \\'object\\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\\'s identity. E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "targetdescription",
					"in": "formData",
					"description": "The description of a node in an established educational framework.",
					"required": false,
					"type": "text"
				},
				{
					"name": "targetname",
					"in": "formData",
					"description": "The name of a node in an established educational framework.",
					"required": false,
					"type": "text"
				},
				{
					"name": "targeturl",
					"in": "formData",
					"description": "The URL of a node in an established educational framework.",
					"required": false,
					"type": "url"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/AlignmentObject"
							}
						}
					}
				},
				"tags": ["Alignment Object"]
			},
			"delete": {
				"summary": "Alignment Object",
				"description": "Deletes a single Alignment Object",
				"operationId": "deleteAlignmentObject",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/AlignmentObject"
							}
						}
					}
				},
				"tags": ["Alignment Object"]
			}
		}
	},
	"definitions": {
		"AlignmentObject": {
			"properties": {
				"additionaltype": {
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"type": "url"
				},
				"alignmenttype": {
					"description": "A category of alignment between the learning resource and the framework node. Recommended values include: \\'assesses\\', \\'teaches\\', \\'requires\\', \\'textComplexity\\', \\'readingLevel\\', \\'educationalSubject\\', and \\'educationLevel\\'.",
					"type": "text"
				},
				"alternatename": {
					"description": "An alias for the item.",
					"type": "text"
				},
				"description": {
					"description": "A short description of the item.",
					"type": "text"
				},
				"educationalalignment": {
					"description": "An alignment to an established educational framework. ",
					"type": "creativework"
				},
				"educationalframework": {
					"description": "The framework to which the resource being described is aligned.",
					"type": "text"
				},
				"image": {
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"type": "url or  imageobject"
				},
				"mainentityofpage": {
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"type": "creativework or  url"
				},
				"name": {
					"description": "The name of the item.",
					"type": "text"
				},
				"potentialaction": {
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \\'object\\' role.",
					"type": "action"
				},
				"sameas": {
					"description": "URL of a reference Web page that unambiguously indicates the item\\'s identity. E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.",
					"type": "url"
				},
				"targetdescription": {
					"description": "The description of a node in an established educational framework.",
					"type": "text"
				},
				"targetname": {
					"description": "The name of a node in an established educational framework.",
					"type": "text"
				},
				"targeturl": {
					"description": "The URL of a node in an established educational framework.",
					"type": "url"
				},
				"url": {
					"description": "URL of the item.",
					"type": "url"
				}
			}
		}
	}
}