{
	"swagger": "2.0",
	"info": {
		"title": "Car Usage Type API",
		"description": "A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.",
		"termsOfService": "http://apievangelist.com/terms-of-service.html",
		"version": "v1"
	},
	"host": "car.usage.type.example.com",
	"basePath": "/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"paths": {
		"/car-usage-type/": {
			"get": {
				"summary": "Get Car Usage Type",
				"description": "Returns Car Usage Type",
				"operationId": "getCarUsageType",
				"parameters": [{
					"name": "q",
					"in": "query",
					"description": "Keyword search for item",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/item"
							}
						}
					}
				},
				"tags": ["Car Usage Type"]
			},
			"post": {
				"summary": "Add Car Usage Type",
				"description": "Add Car Usage Type",
				"operationId": "addCarUsageType",
				"parameters": [{
					"name": "additionalproperty",
					"in": "formData",
					"description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
					"required": false,
					"type": "propertyvalue"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "equal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "greater",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is greater than the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "greaterorequal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "url or  imageobject"
				},
				{
					"name": "lesser",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "lesserorequal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "nonequal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "supersededby",
					"in": "formData",
					"description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
					"required": false,
					"type": "enumeration or  class or  property"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				},
				{
					"name": "valuereference",
					"in": "formData",
					"description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.",
					"required": false,
					"type": "qualitativevalue or  quantitativevalue or  enumeration or  structuredvalue or  propertyvalue"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/item"
							}
						}
					}
				},
				"tags": ["Car Usage Type"]
			}
		},
		"/car-usage-type/{id}/": {
			"get": {
				"summary": "Get Car Usage Type",
				"description": "Returns a single Car Usage Type",
				"operationId": "getCarUsageType",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/item"
							}
						}
					}
				},
				"tags": ["Car Usage Type"]
			},
			"put": {
				"summary": "Update Car Usage Type",
				"description": "Update a single Car Usage Type",
				"operationId": "updateCarUsageTypeItem",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				},
				{
					"name": "additionalproperty",
					"in": "formData",
					"description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
					"required": false,
					"type": "propertyvalue"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "equal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "greater",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is greater than the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "greaterorequal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "url or  imageobject"
				},
				{
					"name": "lesser",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "lesserorequal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "nonequal",
					"in": "formData",
					"description": "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
					"required": false,
					"type": "qualitativevalue"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "supersededby",
					"in": "formData",
					"description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
					"required": false,
					"type": "enumeration or  class or  property"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				},
				{
					"name": "valuereference",
					"in": "formData",
					"description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.",
					"required": false,
					"type": "qualitativevalue or  quantitativevalue or  enumeration or  structuredvalue or  propertyvalue"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/item"
							}
						}
					}
				},
				"tags": ["Car Usage Type"]
			},
			"delete": {
				"summary": "Car Usage Type",
				"description": "Deletes a single Car Usage Type",
				"operationId": "deleteCarUsageType",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/item"
							}
						}
					}
				},
				"tags": ["Car Usage Type"]
			}
		}
	},
	"definitions": {
		"item": {
			"properties": [{
				"name": {
					"description": "additionalproperty",
					"type": "propertyvalue"
				},
				"description": {
					"description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
					"type": "propertyvalue"
				}
			},
			{
				"name": {
					"description": "additionaltype",
					"type": "url"
				},
				"description": {
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"type": "url"
				}
			},
			{
				"name": {
					"description": "alternatename",
					"type": "text"
				},
				"description": {
					"description": "An alias for the item.",
					"type": "text"
				}
			},
			{
				"name": {
					"description": "description",
					"type": "text"
				},
				"description": {
					"description": "A short description of the item.",
					"type": "text"
				}
			},
			{
				"name": {
					"description": "equal",
					"type": "qualitativevalue"
				},
				"description": {
					"description": "This ordering relation for qualitative values indicates that the subject is equal to the object.",
					"type": "qualitativevalue"
				}
			},
			{
				"name": {
					"description": "greater",
					"type": "qualitativevalue"
				},
				"description": {
					"description": "This ordering relation for qualitative values indicates that the subject is greater than the object.",
					"type": "qualitativevalue"
				}
			},
			{
				"name": {
					"description": "greaterorequal",
					"type": "qualitativevalue"
				},
				"description": {
					"description": "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
					"type": "qualitativevalue"
				}
			},
			{
				"name": {
					"description": "image",
					"type": "url or  imageobject"
				},
				"description": {
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"type": "url or  imageobject"
				}
			},
			{
				"name": {
					"description": "lesser",
					"type": "qualitativevalue"
				},
				"description": {
					"description": "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
					"type": "qualitativevalue"
				}
			},
			{
				"name": {
					"description": "lesserorequal",
					"type": "qualitativevalue"
				},
				"description": {
					"description": "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
					"type": "qualitativevalue"
				}
			},
			{
				"name": {
					"description": "mainentityofpage",
					"type": "creativework or  url"
				},
				"description": {
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"type": "creativework or  url"
				}
			},
			{
				"name": {
					"description": "name",
					"type": "text"
				},
				"description": {
					"description": "The name of the item.",
					"type": "text"
				}
			},
			{
				"name": {
					"description": "nonequal",
					"type": "qualitativevalue"
				},
				"description": {
					"description": "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
					"type": "qualitativevalue"
				}
			},
			{
				"name": {
					"description": "potentialaction",
					"type": "action"
				},
				"description": {
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
					"type": "action"
				}
			},
			{
				"name": {
					"description": "sameas",
					"type": "url"
				},
				"description": {
					"description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
					"type": "url"
				}
			},
			{
				"name": {
					"description": "supersededby",
					"type": "enumeration or  class or  property"
				},
				"description": {
					"description": "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
					"type": "enumeration or  class or  property"
				}
			},
			{
				"name": {
					"description": "url",
					"type": "url"
				},
				"description": {
					"description": "URL of the item.",
					"type": "url"
				}
			},
			{
				"name": {
					"description": "valuereference",
					"type": "qualitativevalue or  quantitativevalue or  enumeration or  structuredvalue or  propertyvalue"
				},
				"description": {
					"description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.",
					"type": "qualitativevalue or  quantitativevalue or  enumeration or  structuredvalue or  propertyvalue"
				}
			}]
		}
	}
}