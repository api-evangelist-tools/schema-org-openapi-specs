{
	"swagger": "2.0",
	"info": {
		"title": "Game Server API",
		"description": "Server that provides game interaction in a multiplayer game.",
		"termsOfService": "http://apievangelist.com/terms-of-service.html",
		"version": "v1"
	},
	"host": "game.server.example.com",
	"basePath": "/",
	"schemes": ["http"],
	"produces": ["application/json"],
	"paths": {
		"/game-server/": {
			"get": {
				"summary": "Get Game Server",
				"description": "Returns Game Server",
				"operationId": "getGameServer",
				"parameters": [{
					"name": "q",
					"in": "query",
					"description": "Keyword search for item",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GameServer"
							}
						}
					}
				},
				"tags": ["Game Server"]
			},
			"post": {
				"summary": "Add Game Server",
				"description": "Add Game Server",
				"operationId": "addGameServer",
				"parameters": [{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "game",
					"in": "formData",
					"description": "Video game which is played on this server. Inverse property: gameServer.",
					"required": false,
					"type": "videogame"
				},
				{
					"name": "gameserver",
					"in": "formData",
					"description": "The server on which  it is possible to play the game.  inverse property: game.",
					"required": false,
					"type": "videogame"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "url or  imageobject"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "playersonline",
					"in": "formData",
					"description": "Number of players on the server.",
					"required": false,
					"type": "integer"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "serverstatus",
					"in": "formData",
					"description": "Status of a game server.",
					"required": false,
					"type": "gameserverstatus"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GameServer"
							}
						}
					}
				},
				"tags": ["Game Server"]
			}
		},
		"/game-server/{id}/": {
			"get": {
				"summary": "Get Game Server",
				"description": "Returns a single Game Server",
				"operationId": "getGameServer",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GameServer"
							}
						}
					}
				},
				"tags": ["Game Server"]
			},
			"put": {
				"summary": "Update Game Server",
				"description": "Update a single Game Server",
				"operationId": "updateGameServerItem",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "game",
					"in": "formData",
					"description": "Video game which is played on this server. Inverse property: gameServer.",
					"required": false,
					"type": "videogame"
				},
				{
					"name": "gameserver",
					"in": "formData",
					"description": "The server on which  it is possible to play the game.  inverse property: game.",
					"required": false,
					"type": "videogame"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "url or  imageobject"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "playersonline",
					"in": "formData",
					"description": "Number of players on the server.",
					"required": false,
					"type": "integer"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "serverstatus",
					"in": "formData",
					"description": "Status of a game server.",
					"required": false,
					"type": "gameserverstatus"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GameServer"
							}
						}
					}
				},
				"tags": ["Game Server"]
			},
			"delete": {
				"summary": "Game Server",
				"description": "Deletes a single Game Server",
				"operationId": "deleteGameServer",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GameServer"
							}
						}
					}
				},
				"tags": ["Game Server"]
			}
		}
	},
	"definitions": {
		"GameServer": {
			"properties": {
				"additionaltype": {
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \'typeof\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"type": "url"
				},
				"alternatename": {
					"description": "An alias for the item.",
					"type": "text"
				},
				"description": {
					"description": "A short description of the item.",
					"type": "text"
				},
				"game": {
					"description": "Video game which is played on this server. Inverse property: gameServer.",
					"type": "videogame"
				},
				"gameserver": {
					"description": "The server on which  it is possible to play the game.  inverse property: game.",
					"type": "videogame"
				},
				"image": {
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"type": "url or  imageobject"
				},
				"mainentityofpage": {
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"type": "creativework or  url"
				},
				"name": {
					"description": "The name of the item.",
					"type": "text"
				},
				"playersonline": {
					"description": "Number of players on the server.",
					"type": "integer"
				},
				"potentialaction": {
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \'object\' role.",
					"type": "action"
				},
				"sameas": {
					"description": "URL of a reference Web page that unambiguously indicates the item\'s identity. E.g. the URL of the item\'s Wikipedia page, Freebase page, or official website.",
					"type": "url"
				},
				"serverstatus": {
					"description": "Status of a game server.",
					"type": "gameserverstatus"
				},
				"url": {
					"description": "URL of the item.",
					"type": "url"
				}
			}
		}
	}
}