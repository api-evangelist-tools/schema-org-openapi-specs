- swagger: "2.0"
  info:
    title: Item List API
    description: A list of items of any sort&#x2014;for example, Top 10 Movies About
      Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which
      are often used only for formatting.
    termsOfService: http://apievangelist.com/terms-of-service.html
    version: v1
  host: item.list.example.com
  basePath: /
  schemes:
  - http
  produces:
  - application/json
  paths:
    /item-list/:
      get:
        summary: Get Item List
        description: Returns Item List
        operationId: getItemList
        parameters:
        - name: q
          in: query
          description: Keyword search for item
          required: false
          type: string
        responses:
          200:
            description: A successful response.
            schema:
              type: array
              items:
                $ref: '#/definitions/item'
        tags:
        - Item List
      post:
        summary: Add Item List
        description: Add Item List
        operationId: addItemList
        parameters:
        - name: additionaltype
          in: formData
          description: An additional type for the item, typically used for adding more
            specific types from external vocabularies in microdata syntax. This is a
            relationship between something and a class that the thing is in. In RDFa
            syntax, it is better to use the native RDFa syntax - the 'typeof' attribute
            - for multiple types. Schema.org tools may have only weaker understanding
            of extra types, in particular those defined externally.
          required: false
          type: url
        - name: alternatename
          in: formData
          description: An alias for the item.
          required: false
          type: text
        - name: description
          in: formData
          description: A short description of the item.
          required: false
          type: text
        - name: image
          in: formData
          description: An image of the item. This can be a URL or a fully described
            ImageObject.
          required: false
          type: url or  imageobject
        - name: itemlistelement
          in: formData
          description: 'For itemListElement values, you can use simple strings (e.g.
            "Peter", "Paul", "Mary"), existing entities, or use ListItem.        Text
            values are best if the elements in the list are plain strings. Existing
            entities are best for a simple, unordered list of existing things in your
            data. ListItem is used with ordered lists when you want to provide additional
            context about the element in that list or when the same item might be in
            different places in different lists.        Note: The order of elements
            in your mark-up is not sufficient for indicating the order or elements.  Use
            ListItem with a ''position'' property in such cases.'
          required: false
          type: thing or  text or  listitem
        - name: itemlistorder
          in: formData
          description: Type of ordering (e.g. Ascending, Descending, Unordered).
          required: false
          type: itemlistordertype or  text
        - name: mainentityofpage
          in: formData
          description: 'Indicates a page (or other CreativeWork) for which this thing
            is the main entity being described.            See background notes for
            details.       Inverse property: mainEntity.'
          required: false
          type: creativework or  url
        - name: name
          in: formData
          description: The name of the item.
          required: false
          type: text
        - name: numberofitems
          in: formData
          description: The number of items in an ItemList. Note that some descriptions
            might not fully describe all items in a list (e.g., multi-page pagination);
            in such cases, the numberOfItems would be for the entire list.
          required: false
          type: integer
        - name: potentialaction
          in: formData
          description: Indicates a potential Action, which describes an idealized action
            in which this thing would play an 'object' role.
          required: false
          type: action
        - name: recipeinstructions
          in: formData
          description: 'A step or instruction involved in making the recipe. '
          required: false
          type: recipe
        - name: sameas
          in: formData
          description: URL of a reference Web page that unambiguously indicates the
            item's identity. E.g. the URL of the item's Wikipedia page, Freebase page,
            or official website.
          required: false
          type: url
        - name: track
          in: formData
          description: A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type MusicRecording.  Supersedes
            tracks.
          required: false
          type: musicgroup or musicplaylist
        - name: url
          in: formData
          description: URL of the item.
          required: false
          type: url
        responses:
          200:
            description: A successful response.
            schema:
              type: array
              items:
                $ref: '#/definitions/item'
        tags:
        - Item List
    /item-list/{id}/:
      get:
        summary: Get Item List
        description: Returns a single Item List
        operationId: getItemList
        parameters:
        - name: id
          in: path
          description: Unique id for item
          required: true
          type: integer
        responses:
          200:
            description: A successful response.
            schema:
              type: array
              items:
                $ref: '#/definitions/item'
        tags:
        - Item List
      put:
        summary: Update Item List
        description: Update a single Item List
        operationId: updateItemListItem
        parameters:
        - name: id
          in: path
          description: Unique id for item
          required: true
          type: integer
        - name: additionaltype
          in: formData
          description: An additional type for the item, typically used for adding more
            specific types from external vocabularies in microdata syntax. This is a
            relationship between something and a class that the thing is in. In RDFa
            syntax, it is better to use the native RDFa syntax - the 'typeof' attribute
            - for multiple types. Schema.org tools may have only weaker understanding
            of extra types, in particular those defined externally.
          required: false
          type: url
        - name: alternatename
          in: formData
          description: An alias for the item.
          required: false
          type: text
        - name: description
          in: formData
          description: A short description of the item.
          required: false
          type: text
        - name: image
          in: formData
          description: An image of the item. This can be a URL or a fully described
            ImageObject.
          required: false
          type: url or  imageobject
        - name: itemlistelement
          in: formData
          description: 'For itemListElement values, you can use simple strings (e.g.
            "Peter", "Paul", "Mary"), existing entities, or use ListItem.        Text
            values are best if the elements in the list are plain strings. Existing
            entities are best for a simple, unordered list of existing things in your
            data. ListItem is used with ordered lists when you want to provide additional
            context about the element in that list or when the same item might be in
            different places in different lists.        Note: The order of elements
            in your mark-up is not sufficient for indicating the order or elements.  Use
            ListItem with a ''position'' property in such cases.'
          required: false
          type: thing or  text or  listitem
        - name: itemlistorder
          in: formData
          description: Type of ordering (e.g. Ascending, Descending, Unordered).
          required: false
          type: itemlistordertype or  text
        - name: mainentityofpage
          in: formData
          description: 'Indicates a page (or other CreativeWork) for which this thing
            is the main entity being described.            See background notes for
            details.       Inverse property: mainEntity.'
          required: false
          type: creativework or  url
        - name: name
          in: formData
          description: The name of the item.
          required: false
          type: text
        - name: numberofitems
          in: formData
          description: The number of items in an ItemList. Note that some descriptions
            might not fully describe all items in a list (e.g., multi-page pagination);
            in such cases, the numberOfItems would be for the entire list.
          required: false
          type: integer
        - name: potentialaction
          in: formData
          description: Indicates a potential Action, which describes an idealized action
            in which this thing would play an 'object' role.
          required: false
          type: action
        - name: recipeinstructions
          in: formData
          description: 'A step or instruction involved in making the recipe. '
          required: false
          type: recipe
        - name: sameas
          in: formData
          description: URL of a reference Web page that unambiguously indicates the
            item's identity. E.g. the URL of the item's Wikipedia page, Freebase page,
            or official website.
          required: false
          type: url
        - name: track
          in: formData
          description: A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type MusicRecording.  Supersedes
            tracks.
          required: false
          type: musicgroup or musicplaylist
        - name: url
          in: formData
          description: URL of the item.
          required: false
          type: url
        responses:
          200:
            description: A successful response.
            schema:
              type: array
              items:
                $ref: '#/definitions/item'
        tags:
        - Item List
      delete:
        summary: Item List
        description: Deletes a single Item List
        operationId: deleteItemList
        parameters:
        - name: id
          in: path
          description: Unique id for item
          required: true
          type: integer
        responses:
          200:
            description: A successful response.
            schema:
              type: array
              items:
                $ref: '#/definitions/item'
        tags:
        - Item List
  definitions:
    item:
      properties:
      - name:
          description: additionaltype
          type: url
        description:
          description: An additional type for the item, typically used for adding more
            specific types from external vocabularies in microdata syntax. This is a
            relationship between something and a class that the thing is in. In RDFa
            syntax, it is better to use the native RDFa syntax - the 'typeof' attribute
            - for multiple types. Schema.org tools may have only weaker understanding
            of extra types, in particular those defined externally.
          type: url
      - name:
          description: alternatename
          type: text
        description:
          description: An alias for the item.
          type: text
      - name:
          description: description
          type: text
        description:
          description: A short description of the item.
          type: text
      - name:
          description: image
          type: url or  imageobject
        description:
          description: An image of the item. This can be a URL or a fully described
            ImageObject.
          type: url or  imageobject
      - name:
          description: itemlistelement
          type: thing or  text or  listitem
        description:
          description: 'For itemListElement values, you can use simple strings (e.g.
            "Peter", "Paul", "Mary"), existing entities, or use ListItem.        Text
            values are best if the elements in the list are plain strings. Existing
            entities are best for a simple, unordered list of existing things in your
            data. ListItem is used with ordered lists when you want to provide additional
            context about the element in that list or when the same item might be in
            different places in different lists.        Note: The order of elements
            in your mark-up is not sufficient for indicating the order or elements.  Use
            ListItem with a ''position'' property in such cases.'
          type: thing or  text or  listitem
      - name:
          description: itemlistorder
          type: itemlistordertype or  text
        description:
          description: Type of ordering (e.g. Ascending, Descending, Unordered).
          type: itemlistordertype or  text
      - name:
          description: mainentityofpage
          type: creativework or  url
        description:
          description: 'Indicates a page (or other CreativeWork) for which this thing
            is the main entity being described.            See background notes for
            details.       Inverse property: mainEntity.'
          type: creativework or  url
      - name:
          description: name
          type: text
        description:
          description: The name of the item.
          type: text
      - name:
          description: numberofitems
          type: integer
        description:
          description: The number of items in an ItemList. Note that some descriptions
            might not fully describe all items in a list (e.g., multi-page pagination);
            in such cases, the numberOfItems would be for the entire list.
          type: integer
      - name:
          description: potentialaction
          type: action
        description:
          description: Indicates a potential Action, which describes an idealized action
            in which this thing would play an 'object' role.
          type: action
      - name:
          description: recipeinstructions
          type: recipe
        description:
          description: 'A step or instruction involved in making the recipe. '
          type: recipe
      - name:
          description: sameas
          type: url
        description:
          description: URL of a reference Web page that unambiguously indicates the
            item's identity. E.g. the URL of the item's Wikipedia page, Freebase page,
            or official website.
          type: url
      - name:
          description: track
          type: musicgroup or musicplaylist
        description:
          description: A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type MusicRecording.  Supersedes
            tracks.
          type: musicgroup or musicplaylist
      - name:
          description: url
          type: url
        description:
          description: URL of the item.
          type: url