- "{\n\t\"swagger\": \"2.0\",\n\t\"info\": {\n\t\t\"title\": \"Item List API\",\n\t\t\"description\":
    \"A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen,
    or Top 100 Party Songs. Not to be confused with HTML lists, which are often used
    only for formatting.\",\n\t\t\"termsOfService\": \"http://apievangelist.com/terms-of-service.html\",\n\t\t\"version\":
    \"v1\"\n\t},\n\t\"host\": \"item.list.example.com\",\n\t\"basePath\": \"/\",\n\t\"schemes\":
    [\"http\"],\n\t\"produces\": [\"application/json\"],\n\t\"paths\": {\n\t\t\"/item-list/\":
    {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\": \"Get Item List\",\n\t\t\t\t\"description\":
    \"Returns Item List\",\n\t\t\t\t\"operationId\": \"getItemList\",\n\t\t\t\t\"parameters\":
    [{\n\t\t\t\t\t\"name\": \"q\",\n\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\"description\":
    \"Keyword search for item\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\":
    \"string\"\n\t\t\t\t}],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\":
    \"A successful response.\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\":
    \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/ItemList\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tags\":
    [\"Item List\"]\n\t\t\t},\n\t\t\t\"post\": {\n\t\t\t\t\"summary\": \"Add Item List\",\n\t\t\t\t\"description\":
    \"Add Item List\",\n\t\t\t\t\"operationId\": \"addItemList\",\n\t\t\t\t\"parameters\":
    [{\n\t\t\t\t\t\"name\": \"additionaltype\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"An additional type for the item, typically used for adding more specific types
    from external vocabularies in microdata syntax. This is a relationship between something
    and a class that the thing is in. In RDFa syntax, it is better to use the native
    RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools
    may have only weaker understanding of extra types, in particular those defined externally.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"alternatename\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"An alias for the item.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\":
    \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"description\",\n\t\t\t\t\t\"in\":
    \"formData\",\n\t\t\t\t\t\"description\": \"A short description of the item.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"image\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"An image
    of the item. This can be a URL or a fully described ImageObject.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"url or  imageobject\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"itemlistelement\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"For itemListElement values, you can use simple strings (e.g. \\\"Peter\\\", \\\"Paul\\\",
    \\\"Mary\\\"), existing entities, or use ListItem.        Text values are best if
    the elements in the list are plain strings. Existing entities are best for a simple,
    unordered list of existing things in your data. ListItem is used with ordered lists
    when you want to provide additional context about the element in that list or when
    the same item might be in different places in different lists.        Note: The
    order of elements in your mark-up is not sufficient for indicating the order or
    elements.  Use ListItem with a \\'position\\' property in such cases.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"thing or  text or  listitem\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"itemlistorder\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"Type of ordering (e.g. Ascending, Descending, Unordered).\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"itemlistordertype or  text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"mainentityofpage\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"Indicates a page (or other CreativeWork) for which this thing is the main entity
    being described.            See background notes for details.       Inverse property:
    mainEntity.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\": \"creativework
    or  url\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"in\":
    \"formData\",\n\t\t\t\t\t\"description\": \"The name of the item.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"numberofitems\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"The number of items in an ItemList. Note that some descriptions might not fully
    describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems
    would be for the entire list.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\":
    \"integer\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"potentialaction\",\n\t\t\t\t\t\"in\":
    \"formData\",\n\t\t\t\t\t\"description\": \"Indicates a potential Action, which
    describes an idealized action in which this thing would play an \\'object\\' role.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"action\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"recipeinstructions\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"A step or instruction involved in making the recipe. \",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"recipe\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"sameas\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"URL of
    a reference Web page that unambiguously indicates the item\\'s identity. E.g. the
    URL of the item\\'s Wikipedia page, Freebase page, or official website.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"track\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"A music
    recording (track)&#x2014;usually a single song. If an ItemList is given, the list
    should contain items of type MusicRecording.  Supersedes tracks.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"musicgroup or musicplaylist\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"url\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"URL of the
    item.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t}],\n\t\t\t\t\"responses\":
    {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"A successful response.\",\n\t\t\t\t\t\t\"schema\":
    {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\":
    \"#/definitions/ItemList\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tags\":
    [\"Item List\"]\n\t\t\t}\n\t\t},\n\t\t\"/item-list/{id}/\": {\n\t\t\t\"get\": {\n\t\t\t\t\"summary\":
    \"Get Item List\",\n\t\t\t\t\"description\": \"Returns a single Item List\",\n\t\t\t\t\"operationId\":
    \"getItemList\",\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\"in\":
    \"path\",\n\t\t\t\t\t\"description\": \"Unique id for item\",\n\t\t\t\t\t\"required\":
    true,\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t}],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\":
    {\n\t\t\t\t\t\t\"description\": \"A successful response.\",\n\t\t\t\t\t\t\"schema\":
    {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\":
    \"#/definitions/ItemList\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tags\":
    [\"Item List\"]\n\t\t\t},\n\t\t\t\"put\": {\n\t\t\t\t\"summary\": \"Update Item
    List\",\n\t\t\t\t\"description\": \"Update a single Item List\",\n\t\t\t\t\"operationId\":
    \"updateItemListItem\",\n\t\t\t\t\"parameters\": [{\n\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\"in\":
    \"path\",\n\t\t\t\t\t\"description\": \"Unique id for item\",\n\t\t\t\t\t\"required\":
    true,\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"additionaltype\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"An additional type for the item, typically used for adding more specific types
    from external vocabularies in microdata syntax. This is a relationship between something
    and a class that the thing is in. In RDFa syntax, it is better to use the native
    RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools
    may have only weaker understanding of extra types, in particular those defined externally.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"alternatename\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"An alias for the item.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\":
    \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"description\",\n\t\t\t\t\t\"in\":
    \"formData\",\n\t\t\t\t\t\"description\": \"A short description of the item.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"image\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"An image
    of the item. This can be a URL or a fully described ImageObject.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"url or  imageobject\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"itemlistelement\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"For itemListElement values, you can use simple strings (e.g. \\\"Peter\\\", \\\"Paul\\\",
    \\\"Mary\\\"), existing entities, or use ListItem.        Text values are best if
    the elements in the list are plain strings. Existing entities are best for a simple,
    unordered list of existing things in your data. ListItem is used with ordered lists
    when you want to provide additional context about the element in that list or when
    the same item might be in different places in different lists.        Note: The
    order of elements in your mark-up is not sufficient for indicating the order or
    elements.  Use ListItem with a \\'position\\' property in such cases.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"thing or  text or  listitem\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"itemlistorder\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"Type of ordering (e.g. Ascending, Descending, Unordered).\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"itemlistordertype or  text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"mainentityofpage\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"Indicates a page (or other CreativeWork) for which this thing is the main entity
    being described.            See background notes for details.       Inverse property:
    mainEntity.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\": \"creativework
    or  url\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"in\":
    \"formData\",\n\t\t\t\t\t\"description\": \"The name of the item.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"numberofitems\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"The number of items in an ItemList. Note that some descriptions might not fully
    describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems
    would be for the entire list.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\":
    \"integer\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"potentialaction\",\n\t\t\t\t\t\"in\":
    \"formData\",\n\t\t\t\t\t\"description\": \"Indicates a potential Action, which
    describes an idealized action in which this thing would play an \\'object\\' role.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"action\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"recipeinstructions\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\":
    \"A step or instruction involved in making the recipe. \",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"recipe\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"sameas\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"URL of
    a reference Web page that unambiguously indicates the item\\'s identity. E.g. the
    URL of the item\\'s Wikipedia page, Freebase page, or official website.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"track\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"A music
    recording (track)&#x2014;usually a single song. If an ItemList is given, the list
    should contain items of type MusicRecording.  Supersedes tracks.\",\n\t\t\t\t\t\"required\":
    false,\n\t\t\t\t\t\"type\": \"musicgroup or musicplaylist\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\":
    \"url\",\n\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\"description\": \"URL of the
    item.\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t}],\n\t\t\t\t\"responses\":
    {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"A successful response.\",\n\t\t\t\t\t\t\"schema\":
    {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\":
    \"#/definitions/ItemList\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tags\":
    [\"Item List\"]\n\t\t\t},\n\t\t\t\"delete\": {\n\t\t\t\t\"summary\": \"Item List\",\n\t\t\t\t\"description\":
    \"Deletes a single Item List\",\n\t\t\t\t\"operationId\": \"deleteItemList\",\n\t\t\t\t\"parameters\":
    [{\n\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\"description\":
    \"Unique id for item\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t}],\n\t\t\t\t\"responses\":
    {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"A successful response.\",\n\t\t\t\t\t\t\"schema\":
    {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\":
    \"#/definitions/ItemList\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tags\":
    [\"Item List\"]\n\t\t\t}\n\t\t}\n\t},\n\t\"definitions\": {\n\t\t\"ItemList\": {\n\t\t\t\"properties\":
    {\n\t\t\t\t\"additionaltype\": {\n\t\t\t\t\t\"description\": \"An additional type
    for the item, typically used for adding more specific types from external vocabularies
    in microdata syntax. This is a relationship between something and a class that the
    thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\'
    attribute - for multiple types. Schema.org tools may have only weaker understanding
    of extra types, in particular those defined externally.\",\n\t\t\t\t\t\"type\":
    \"url\"\n\t\t\t\t},\n\t\t\t\t\"alternatename\": {\n\t\t\t\t\t\"description\": \"An
    alias for the item.\",\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t\"description\":
    {\n\t\t\t\t\t\"description\": \"A short description of the item.\",\n\t\t\t\t\t\"type\":
    \"text\"\n\t\t\t\t},\n\t\t\t\t\"image\": {\n\t\t\t\t\t\"description\": \"An image
    of the item. This can be a URL or a fully described ImageObject.\",\n\t\t\t\t\t\"type\":
    \"url or  imageobject\"\n\t\t\t\t},\n\t\t\t\t\"itemlistelement\": {\n\t\t\t\t\t\"description\":
    \"For itemListElement values, you can use simple strings (e.g. \\\"Peter\\\", \\\"Paul\\\",
    \\\"Mary\\\"), existing entities, or use ListItem.        Text values are best if
    the elements in the list are plain strings. Existing entities are best for a simple,
    unordered list of existing things in your data. ListItem is used with ordered lists
    when you want to provide additional context about the element in that list or when
    the same item might be in different places in different lists.        Note: The
    order of elements in your mark-up is not sufficient for indicating the order or
    elements.  Use ListItem with a \\'position\\' property in such cases.\",\n\t\t\t\t\t\"type\":
    \"thing or  text or  listitem\"\n\t\t\t\t},\n\t\t\t\t\"itemlistorder\": {\n\t\t\t\t\t\"description\":
    \"Type of ordering (e.g. Ascending, Descending, Unordered).\",\n\t\t\t\t\t\"type\":
    \"itemlistordertype or  text\"\n\t\t\t\t},\n\t\t\t\t\"mainentityofpage\": {\n\t\t\t\t\t\"description\":
    \"Indicates a page (or other CreativeWork) for which this thing is the main entity
    being described.            See background notes for details.       Inverse property:
    mainEntity.\",\n\t\t\t\t\t\"type\": \"creativework or  url\"\n\t\t\t\t},\n\t\t\t\t\"name\":
    {\n\t\t\t\t\t\"description\": \"The name of the item.\",\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t},\n\t\t\t\t\"numberofitems\":
    {\n\t\t\t\t\t\"description\": \"The number of items in an ItemList. Note that some
    descriptions might not fully describe all items in a list (e.g., multi-page pagination);
    in such cases, the numberOfItems would be for the entire list.\",\n\t\t\t\t\t\"type\":
    \"integer\"\n\t\t\t\t},\n\t\t\t\t\"potentialaction\": {\n\t\t\t\t\t\"description\":
    \"Indicates a potential Action, which describes an idealized action in which this
    thing would play an \\'object\\' role.\",\n\t\t\t\t\t\"type\": \"action\"\n\t\t\t\t},\n\t\t\t\t\"recipeinstructions\":
    {\n\t\t\t\t\t\"description\": \"A step or instruction involved in making the recipe.
    \",\n\t\t\t\t\t\"type\": \"recipe\"\n\t\t\t\t},\n\t\t\t\t\"sameas\": {\n\t\t\t\t\t\"description\":
    \"URL of a reference Web page that unambiguously indicates the item\\'s identity.
    E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.\",\n\t\t\t\t\t\"type\":
    \"url\"\n\t\t\t\t},\n\t\t\t\t\"track\": {\n\t\t\t\t\t\"description\": \"A music
    recording (track)&#x2014;usually a single song. If an ItemList is given, the list
    should contain items of type MusicRecording.  Supersedes tracks.\",\n\t\t\t\t\t\"type\":
    \"musicgroup or musicplaylist\"\n\t\t\t\t},\n\t\t\t\t\"url\": {\n\t\t\t\t\t\"description\":
    \"URL of the item.\",\n\t\t\t\t\t\"type\": \"url\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"