{
	"swagger": "2.0",
	"info": {
		"title": "People Audience API",
		"description": "A set of characteristics belonging to people, e.g. who compose an item\\'s target audience.",
		"termsOfService": "http:\/\/apievangelist.com\/terms-of-service.html",
		"version": "v1"
	},
	"host": "people.audience.example.com",
	"basePath": "\/",
	"schemes": ["http"],
	"produces": ["application\/json"],
	"paths": {
		"\/people-audience\/": {
			"get": {
				"summary": "Get People Audience",
				"description": "Returns People Audience",
				"operationId": "getPeopleAudience",
				"parameters": [{
					"name": "q",
					"in": "query",
					"description": "Keyword search for item",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/PeopleAudience"
							}
						}
					}
				},
				"tags": ["People Audience"]
			},
			"post": {
				"summary": "Add People Audience",
				"description": "Add People Audience",
				"operationId": "addPeopleAudience",
				"parameters": [{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "audiencetype",
					"in": "formData",
					"description": "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "geographicarea",
					"in": "formData",
					"description": "The geographic area associated with the audience.",
					"required": false,
					"type": "administrativearea"
				},
				{
					"name": "healthcondition",
					"in": "formData",
					"description": "Expectations for health conditions of target audience.",
					"required": false,
					"type": "medicalcondition"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "imageobject or  url"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \\'object\\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "requiredgender",
					"in": "formData",
					"description": "Audiences defined by a person\\'s gender.",
					"required": false,
					"type": "text"
				},
				{
					"name": "requiredmaxage",
					"in": "formData",
					"description": "Audiences defined by a person\\'s maximum age.",
					"required": false,
					"type": "integer"
				},
				{
					"name": "requiredminage",
					"in": "formData",
					"description": "Audiences defined by a person\\'s minimum age.",
					"required": false,
					"type": "integer"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\\'s identity. E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "suggestedgender",
					"in": "formData",
					"description": "The gender of the person or audience.",
					"required": false,
					"type": "text"
				},
				{
					"name": "suggestedmaxage",
					"in": "formData",
					"description": "Maximal age recommended for viewing content.",
					"required": false,
					"type": "number"
				},
				{
					"name": "suggestedminage",
					"in": "formData",
					"description": "Minimal age recommended for viewing content.",
					"required": false,
					"type": "number"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/PeopleAudience"
							}
						}
					}
				},
				"tags": ["People Audience"]
			}
		},
		"\/people-audience\/{id}\/": {
			"get": {
				"summary": "Get People Audience",
				"description": "Returns a single People Audience",
				"operationId": "getPeopleAudience",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/PeopleAudience"
							}
						}
					}
				},
				"tags": ["People Audience"]
			},
			"put": {
				"summary": "Update People Audience",
				"description": "Update a single People Audience",
				"operationId": "updatePeopleAudienceItem",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				},
				{
					"name": "additionaltype",
					"in": "formData",
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"required": false,
					"type": "url"
				},
				{
					"name": "alternatename",
					"in": "formData",
					"description": "An alias for the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "audiencetype",
					"in": "formData",
					"description": "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
					"required": false,
					"type": "text"
				},
				{
					"name": "description",
					"in": "formData",
					"description": "A short description of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "geographicarea",
					"in": "formData",
					"description": "The geographic area associated with the audience.",
					"required": false,
					"type": "administrativearea"
				},
				{
					"name": "healthcondition",
					"in": "formData",
					"description": "Expectations for health conditions of target audience.",
					"required": false,
					"type": "medicalcondition"
				},
				{
					"name": "image",
					"in": "formData",
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"required": false,
					"type": "imageobject or  url"
				},
				{
					"name": "mainentityofpage",
					"in": "formData",
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"required": false,
					"type": "creativework or  url"
				},
				{
					"name": "name",
					"in": "formData",
					"description": "The name of the item.",
					"required": false,
					"type": "text"
				},
				{
					"name": "potentialaction",
					"in": "formData",
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \\'object\\' role.",
					"required": false,
					"type": "action"
				},
				{
					"name": "requiredgender",
					"in": "formData",
					"description": "Audiences defined by a person\\'s gender.",
					"required": false,
					"type": "text"
				},
				{
					"name": "requiredmaxage",
					"in": "formData",
					"description": "Audiences defined by a person\\'s maximum age.",
					"required": false,
					"type": "integer"
				},
				{
					"name": "requiredminage",
					"in": "formData",
					"description": "Audiences defined by a person\\'s minimum age.",
					"required": false,
					"type": "integer"
				},
				{
					"name": "sameas",
					"in": "formData",
					"description": "URL of a reference Web page that unambiguously indicates the item\\'s identity. E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.",
					"required": false,
					"type": "url"
				},
				{
					"name": "suggestedgender",
					"in": "formData",
					"description": "The gender of the person or audience.",
					"required": false,
					"type": "text"
				},
				{
					"name": "suggestedmaxage",
					"in": "formData",
					"description": "Maximal age recommended for viewing content.",
					"required": false,
					"type": "number"
				},
				{
					"name": "suggestedminage",
					"in": "formData",
					"description": "Minimal age recommended for viewing content.",
					"required": false,
					"type": "number"
				},
				{
					"name": "url",
					"in": "formData",
					"description": "URL of the item.",
					"required": false,
					"type": "url"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/PeopleAudience"
							}
						}
					}
				},
				"tags": ["People Audience"]
			},
			"delete": {
				"summary": "People Audience",
				"description": "Deletes a single People Audience",
				"operationId": "deletePeopleAudience",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "Unique id for item",
					"required": true,
					"type": "integer"
				}],
				"responses": {
					"200": {
						"description": "A successful response.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#\/definitions\/PeopleAudience"
							}
						}
					}
				},
				"tags": ["People Audience"]
			}
		}
	},
	"definitions": {
		"PeopleAudience": {
			"properties": {
				"additionaltype": {
					"description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the \\'typeof\\' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
					"type": "url"
				},
				"alternatename": {
					"description": "An alias for the item.",
					"type": "text"
				},
				"audiencetype": {
					"description": "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
					"type": "text"
				},
				"description": {
					"description": "A short description of the item.",
					"type": "text"
				},
				"geographicarea": {
					"description": "The geographic area associated with the audience.",
					"type": "administrativearea"
				},
				"healthcondition": {
					"description": "Expectations for health conditions of target audience.",
					"type": "medicalcondition"
				},
				"image": {
					"description": "An image of the item. This can be a URL or a fully described ImageObject.",
					"type": "imageobject or  url"
				},
				"mainentityofpage": {
					"description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described.            See background notes for details.       Inverse property: mainEntity.",
					"type": "creativework or  url"
				},
				"name": {
					"description": "The name of the item.",
					"type": "text"
				},
				"potentialaction": {
					"description": "Indicates a potential Action, which describes an idealized action in which this thing would play an \\'object\\' role.",
					"type": "action"
				},
				"requiredgender": {
					"description": "Audiences defined by a person\\'s gender.",
					"type": "text"
				},
				"requiredmaxage": {
					"description": "Audiences defined by a person\\'s maximum age.",
					"type": "integer"
				},
				"requiredminage": {
					"description": "Audiences defined by a person\\'s minimum age.",
					"type": "integer"
				},
				"sameas": {
					"description": "URL of a reference Web page that unambiguously indicates the item\\'s identity. E.g. the URL of the item\\'s Wikipedia page, Freebase page, or official website.",
					"type": "url"
				},
				"suggestedgender": {
					"description": "The gender of the person or audience.",
					"type": "text"
				},
				"suggestedmaxage": {
					"description": "Maximal age recommended for viewing content.",
					"type": "number"
				},
				"suggestedminage": {
					"description": "Minimal age recommended for viewing content.",
					"type": "number"
				},
				"url": {
					"description": "URL of the item.",
					"type": "url"
				}
			}
		}
	}
}