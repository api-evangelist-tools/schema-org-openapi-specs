{
    "$id": "http:\/\/schema.org.apievangelist.com\/schema\/objects\/PropertyValue.json",
    "schema": "http:\/\/json-schema.org\/draft-07\/schema#",
    "description": "A property-value pair, e.g. representing a feature of a product or place. Use the  name  property for the name of the property. If there is an additional human-readable version of the value, put that into the  description  property.  Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.",
    "properties": {
        "unitCode": {
            "description": "The unit of measurement given using the UN\/CEFACT Common Code (3 characters) or a URL. Other codes than the UN\/CEFACT Common Code may be used with a prefix followed by a colon.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/URL"
            }
        },
        "minValue": {
            "description": "The lower value of some characteristic or property.",
            "type": "number",
            "format": "float"
        },
        "propertyID": {
            "description": "A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be (1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3) a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry). Standards bodies should promote a standard prefix for the identifiers of properties from their standards.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/URL"
            }
        },
        "value": {
            "description": "The value of the quantitative value or property value node.   For QuantitativeValue and MonetaryAmount, the recommended type for values is  Number . For PropertyValue, it can be  Text; ,  Number ,  Boolean , or  StructuredValue .  ",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/StructuredValue"
            }
        },
        "valueReference": {
            "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/Enumeration"
            }
        },
        "maxValue": {
            "description": "The upper value of some characteristic or property.",
            "type": "number",
            "format": "float"
        },
        "unitText": {
            "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for unitCode.",
            "type": "string"
        },
        "sameAs": {
            "description": "URL of a reference Web page that unambiguously indicates the item s identity. E.g. the URL of the item s Wikipedia page, Wikidata entry, or official website.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/URL"
            }
        },
        "url": {
            "description": "URL of the item.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/URL"
            }
        },
        "image": {
            "description": "An image of the item. This can be a URL or a fully described ImageObject.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/ImageObject"
            }
        },
        "additionalType": {
            "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the  typeof  attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/URL"
            }
        },
        "name": {
            "description": "The name of the item.",
            "type": "string"
        },
        "identifier": {
            "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/PropertyValue"
            }
        },
        "potentialAction": {
            "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an  object  role.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/Action"
            }
        },
        "mainEntityOfPage": {
            "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details.",
            "schema": {
                "$ref": "http://schema.org.apievangelist.com/schema/objects/URL"
            }
        },
        "description": {
            "description": "A description of the item.",
            "type": "string"
        },
        "disambiguatingDescription": {
            "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
            "type": "string"
        },
        "alternateName": {
            "description": "An alias for the item.",
            "type": "string"
        }
    }
}